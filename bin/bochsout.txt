00000000000i[     ] Bochs x86 Emulator 2.6.2
00000000000i[     ]   Built from SVN snapshot on May 26, 2013
00000000000i[     ] Compiled on Dec  6 2022 at 05:48:18
00000000000i[     ] System configuration
00000000000i[     ]   processors: 1 (cores=1, HT threads=1)
00000000000i[     ]   A20 line support: yes
00000000000i[     ] IPS is set to 4000000
00000000000i[     ] CPU configuration
00000000000i[     ]   SMP support: no
00000000000i[     ]   level: 6
00000000000i[     ]   APIC support: xapic
00000000000i[     ]   FPU support: yes
00000000000i[     ]   MMX support: yes
00000000000i[     ]   3dnow! support: no
00000000000i[     ]   SEP support: yes
00000000000i[     ]   SSE support: sse2
00000000000i[     ]   XSAVE support: no 
00000000000i[     ]   AES support: no
00000000000i[     ]   MOVBE support: no
00000000000i[     ]   ADX support: no
00000000000i[     ]   x86-64 support: no
00000000000i[     ]   MWAIT support: yes
00000000000i[     ] Optimization configuration
00000000000i[     ]   RepeatSpeedups support: no
00000000000i[     ]   Fast function calls: no
00000000000i[     ]   Handlers Chaining speedups: no
00000000000i[     ] Devices configuration
00000000000i[     ]   NE2000 support: no
00000000000i[     ]   PCI support: yes, enabled=yes
00000000000i[     ]   SB16 support: no
00000000000i[     ]   USB support: no
00000000000i[     ]   VGA extension support: vbe
00000000000i[MEM0 ] allocated memory at 0x7f6121456010. after alignment, vector=0x7f6121457000
00000000000i[MEM0 ] 32.00MB
00000000000i[MEM0 ] mem block size = 0x00100000, blocks=32
00000000000i[MEM0 ] rom at 0xfffe0000/131072 ('/bochs/share/bochs/BIOS-bochs-latest')
00000000000i[     ] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV  ] i440FX PMC present at device 0, function 0
00000000000i[     ] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV  ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[     ] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS ] Using local time for initial clock
00000000000i[CMOS ] Setting initial clock to: Wed Feb 22 06:51:26 2023 (time0=1677077486)
00000000000i[     ] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA  ] channel 4 used by cascade
00000000000i[     ] init_dev of 'pic' plugin device by virtual method
00000000000i[     ] init_dev of 'pit' plugin device by virtual method
00000000000i[     ] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA  ] channel 2 used by Floppy Drive
00000000000i[     ] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0 ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA  ] interval=200000
00000000000i[MEM0 ] Register memory access handlers: 0x0000e0000000 - 0x0000e0ffffff
00000000000i[BXVGA] VBE Bochs Display Extension Enabled
00000000000i[XGUI ] test_alloc_colors: 16 colors available out of 16 colors tried
00000000000i[XGUI ] font 8 wide x 16 high, display depth = 24
00000000000i[MEM0 ] rom at 0xc0000/41472 ('/bochs/share/bochs/VGABIOS-lgpl-latest')
00000000000i[     ] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV  ] ACPI Controller present at device 1, function 3
00000000000i[     ] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAP ] initializing I/O APIC
00000000000i[MEM0 ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAP ] IOAPIC enabled (base address = 0xfec00000)
00000000000i[     ] init_dev of 'keyboard' plugin device by virtual method
00000000000i[KBD  ] will paste characters every 400 keyboard ticks
00000000000i[     ] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD   ] HD on ata0-0: 'hd60M.img', 'flat' mode
00000000000i[IMG  ] hd_size: 62447616
00000000000i[HD   ] ata0-0: using specified geometry: CHS=121/16/63
00000000000i[HD   ] translation on ata0-0 set to 'none'
00000000000i[HD   ] Using boot sequence disk, none, none
00000000000i[HD   ] Floppy boot signature check is enabled
00000000000i[     ] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV  ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[     ] init_dev of 'unmapped' plugin device by virtual method
00000000000i[     ] init_dev of 'biosdev' plugin device by virtual method
00000000000i[     ] init_dev of 'speaker' plugin device by virtual method
00000000000i[     ] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[     ] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR  ] parallel port 1 at 0x0378 irq 7
00000000000i[     ] init_dev of 'serial' plugin device by virtual method
00000000000i[SER  ] com1 at 0x03f8 irq 4
00000000000i[     ] init_dev of 'iodebug' plugin device by virtual method
00000000000i[     ] register state of 'pci' plugin device by virtual method
00000000000i[     ] register state of 'pci2isa' plugin device by virtual method
00000000000i[     ] register state of 'cmos' plugin device by virtual method
00000000000i[     ] register state of 'dma' plugin device by virtual method
00000000000i[     ] register state of 'pic' plugin device by virtual method
00000000000i[     ] register state of 'pit' plugin device by virtual method
00000000000i[     ] register state of 'floppy' plugin device by virtual method
00000000000i[     ] register state of 'vga' plugin device by virtual method
00000000000i[     ] register state of 'unmapped' plugin device by virtual method
00000000000i[     ] register state of 'biosdev' plugin device by virtual method
00000000000i[     ] register state of 'speaker' plugin device by virtual method
00000000000i[     ] register state of 'extfpuirq' plugin device by virtual method
00000000000i[     ] register state of 'parallel' plugin device by virtual method
00000000000i[     ] register state of 'serial' plugin device by virtual method
00000000000i[     ] register state of 'iodebug' plugin device by virtual method
00000000000i[     ] register state of 'acpi' plugin device by virtual method
00000000000i[     ] register state of 'ioapic' plugin device by virtual method
00000000000i[     ] register state of 'keyboard' plugin device by virtual method
00000000000i[     ] register state of 'harddrv' plugin device by virtual method
00000000000i[     ] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS  ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0 ] cpu hardware reset
00000000000i[APIC0] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0 ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00000000000i[CPU0 ] CPUID[0x00000001]: 00000633 00010800 00000008 1fcbfbff
00000000000i[CPU0 ] CPUID[0x00000002]: 00410601 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[CPU0 ] CPUID[0x80000000]: 80000008 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000001]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00000000000i[CPU0 ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00000000000i[CPU0 ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00000000000i[CPU0 ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00000000000i[CPU0 ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0 ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000008]: 00002028 00000000 00000000 00000000
00000000000i[     ] reset of 'pci' plugin device by virtual method
00000000000i[     ] reset of 'pci2isa' plugin device by virtual method
00000000000i[     ] reset of 'cmos' plugin device by virtual method
00000000000i[     ] reset of 'dma' plugin device by virtual method
00000000000i[     ] reset of 'pic' plugin device by virtual method
00000000000i[     ] reset of 'pit' plugin device by virtual method
00000000000i[     ] reset of 'floppy' plugin device by virtual method
00000000000i[     ] reset of 'vga' plugin device by virtual method
00000000000i[     ] reset of 'acpi' plugin device by virtual method
00000000000i[     ] reset of 'ioapic' plugin device by virtual method
00000000000i[     ] reset of 'keyboard' plugin device by virtual method
00000000000i[     ] reset of 'harddrv' plugin device by virtual method
00000000000i[     ] reset of 'pci_ide' plugin device by virtual method
00000000000i[     ] reset of 'unmapped' plugin device by virtual method
00000000000i[     ] reset of 'biosdev' plugin device by virtual method
00000000000i[     ] reset of 'speaker' plugin device by virtual method
00000000000i[SPEAK] Using /dev/console for output
00000000000i[     ] reset of 'extfpuirq' plugin device by virtual method
00000000000i[     ] reset of 'parallel' plugin device by virtual method
00000000000i[     ] reset of 'serial' plugin device by virtual method
00000000000i[     ] reset of 'iodebug' plugin device by virtual method
00000000000i[XGUI ] Mouse capture off
00000000000i[     ] set SIGINT handler to bx_debug_ctrlc_handler
00000000000i[XGUI ] Mouse capture off
00000000025i[MEM0 ] allocate_block: block=0x0 used 0x1 of 0x20
00000004661i[BIOS ] $Revision: 11545 $ $Date: 2012-11-11 09:11:17 +0100 (So, 11. Nov 2012) $
00000319047i[KBD  ] reset-disable command received
00000321819i[BIOS ] Starting rombios32
00000322253i[BIOS ] Shutdown flag 0
00000322848i[BIOS ] ram_size=0x02000000
00000323269i[BIOS ] ram_end=32MB
00000363786i[BIOS ] Found 1 cpu(s)
00000377973i[BIOS ] bios_table_addr: 0x000fa448 end=0x000fcc00
00000705770i[PCI  ] i440FX PMC write to PAM register 59 (TLB Flush)
00001033697i[P2I  ] PCI IRQ routing: PIRQA# set to 0x0b
00001033716i[P2I  ] PCI IRQ routing: PIRQB# set to 0x09
00001033735i[P2I  ] PCI IRQ routing: PIRQC# set to 0x0b
00001033754i[P2I  ] PCI IRQ routing: PIRQD# set to 0x09
00001033764i[P2I  ] write: ELCR2 = 0x0a
00001034530i[BIOS ] PIIX3/PIIX4 init: elcr=00 0a
00001042203i[BIOS ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00001044473i[BIOS ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00001046582i[BIOS ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00001046811i[PIDE ] new BM-DMA address: 0xc000
00001047428i[BIOS ] region 4: 0x0000c000
00001049453i[BIOS ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00001049686i[ACPI ] new irq line = 11
00001049698i[ACPI ] new irq line = 9
00001049727i[ACPI ] new PM base address: 0xb000
00001049741i[ACPI ] new SM base address: 0xb100
00001049769i[PCI  ] setting SMRAM control register to 0x4a
00001213860i[CPU0 ] Enter to System Management Mode
00001213871i[CPU0 ] RSM: Resuming from System Management Mode
00001377889i[PCI  ] setting SMRAM control register to 0x0a
00001392782i[BIOS ] MP table addr=0x000fa520 MPC table addr=0x000fa450 size=0xc8
00001394538i[BIOS ] SMBIOS table addr=0x000fa530
00001394596i[MEM0 ] allocate_block: block=0x1f used 0x2 of 0x20
00001396733i[BIOS ] ACPI tables: RSDP addr=0x000fa650 ACPI DATA addr=0x01ff0000 size=0xf72
00001399930i[BIOS ] Firmware waking vector 0x1ff00cc
00001401728i[PCI  ] i440FX PMC write to PAM register 59 (TLB Flush)
00001402456i[BIOS ] bios_table_cur_addr: 0x000fa674
00001530073i[VBIOS] VGABios $Id: vgabios.c,v 1.75 2011/10/15 14:07:21 vruppert Exp $
00001530144i[BXVGA] VBE known Display Interface b0c0
00001530176i[BXVGA] VBE known Display Interface b0c5
00001533101i[VBIOS] VBE Bios $Id: vbe.c,v 1.64 2011/07/19 18:25:05 vruppert Exp $
00001600002i[XGUI ] charmap update. Font Height is 16
00001872713i[BIOS ] ata0-0: PCHS=121/16/63 translation=none LCHS=121/16/63
00005749919i[BIOS ] IDE time out
00017824347i[BIOS ] Booting from 0000:7c00
00018050683i[MEM0 ] allocate_block: block=0x1 used 0x3 of 0x20
00018293911e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018394714e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018791185e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019020340e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019121143e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019517614e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019618417e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019680256e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019781059e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020177530e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020278333e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020340172e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020903959e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021004762e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021401233e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021630388e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021731191e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022127662e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022228465e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022290304e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022854091e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022954894e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023351365e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023580520e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023681323e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024077794e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024178597e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024240436e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024341239e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024737710e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024838513e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024900352e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025464139e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025564942e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025961413e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026190568e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026291371e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026687842e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026788645e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026850484e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027414271e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027515074e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027911545e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028140700e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028241503e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028805290e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029369077e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029598232e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029699035e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030095506e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030196309e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030258148e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030821935e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030922738e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031319209e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031548364e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031649167e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032212954e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032776741e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033005896e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033106699e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033503170e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033603973e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033665812e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034229599e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034330402e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034726873e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034956028e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035056831e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035453302e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035554105e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035615944e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035716747e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036113218e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036214021e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036275860e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036839647e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036940450e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00037336921e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00037566076e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00037666879e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038063350e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038164153e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038225992e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038326795e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038723266e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038824069e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038885908e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039449695e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039550498e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039946969e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040176124e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040276927e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040673398e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040774201e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040836040e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041399827e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041500630e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041897101e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042126256e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042227059e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042623530e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042724333e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042786172e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042886975e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043283446e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043384249e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043446088e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044009875e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044110678e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044507149e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044736304e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044837107e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045233578e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045334381e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045396220e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045960007e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046060810e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046457281e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046686436e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046787239e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047183710e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047284513e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047346352e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047447155e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047843626e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047944429e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048006268e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048570055e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048670858e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049067329e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049296484e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049397287e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049793758e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049894561e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049956400e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050520187e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050620990e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051017461e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051246616e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051347419e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051911206e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052474993e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052704148e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052804951e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053201422e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053302225e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053364064e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053927851e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054028654e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054425125e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054654280e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054755083e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055151554e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055252357e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055314196e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055414999e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055811470e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055912273e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055974112e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00056537899e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00056638702e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057035173e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057264328e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057365131e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057761602e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057862405e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057924244e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058025047e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058421518e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058522321e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058584160e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059147947e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059248750e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059645221e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059874376e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059975179e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060371650e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060472453e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060534292e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061098079e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061198882e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061595353e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061824508e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061925311e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062321782e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062422585e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062484424e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062585227e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062981698e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063082501e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063144340e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063708127e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063808930e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064205401e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064434556e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064535359e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064931830e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065032633e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065094472e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065658259e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065759062e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066155533e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066384688e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066485491e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066881962e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066982765e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067044604e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067145407e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067541878e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067642681e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067704520e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068268307e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068369110e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068765581e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068994736e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069095539e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069492010e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069592813e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069654652e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070218439e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070319242e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070715713e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070944868e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00071045671e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00071609458e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072173245e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072402400e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072503203e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072899674e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073000477e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073062316e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073626103e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073726906e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074123377e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074352532e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074453335e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074849806e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074950609e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075012448e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075113251e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075509722e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075610525e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075672364e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076236151e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076336954e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076733425e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076962580e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077063383e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077459854e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077560657e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077622496e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077723299e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078119770e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078220573e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078282412e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078846199e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078947002e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079343473e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079572628e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079673431e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080069902e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080170705e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080232544e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080796331e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080897134e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081293605e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081522760e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081623563e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082020034e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082120837e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082182676e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082283479e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082679950e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082780753e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082842592e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083406379e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083507182e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083903653e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084132808e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084233611e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084630082e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084730885e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084792724e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085356511e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085457314e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085853785e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086082940e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086183743e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086580214e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086681017e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086742856e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086843659e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087240130e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087340933e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087402772e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087966559e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088067362e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088463833e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088692988e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088793791e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089190262e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089291065e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089352904e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089916691e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090017494e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090413965e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090643120e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090743923e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091307710e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091871497e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092100652e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092201455e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092597926e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092698729e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092760568e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093324355e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093425158e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093821629e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094050784e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094151587e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094715374e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095279161e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095508316e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095609119e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096005590e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096106393e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096168232e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096732019e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096832822e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097229293e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097458448e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097559251e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097955722e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098056525e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098118364e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098219167e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098615638e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098716441e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098778280e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099342067e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099442870e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099839341e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100068496e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100169299e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100565770e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100666573e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100728412e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100829215e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101225686e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101326489e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101388328e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101952115e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00102043285i[     ] Ctrl-C detected in signal handler.
00102043286i[XGUI ] Mouse capture off
00102043286i[     ] dbg: Quit
00102043286i[CPU0 ] CPU is in protected mode (active)
00102043286i[CPU0 ] CS.mode = 32 bit
00102043286i[CPU0 ] SS.mode = 32 bit
00102043286i[CPU0 ] EFER   = 0x00000000
00102043286i[CPU0 ] | EAX=00000018  EBX=c00007d0  ECX=000000c1  EDX=00000010
00102043286i[CPU0 ] | ESP=c009ef58  EBP=c009efa4  ESI=c00b8c9c  EDI=c00b8bfc
00102043286i[CPU0 ] | IOPL=0 id vip vif ac vm rf nt of df if tf sf ZF af PF cf
00102043286i[CPU0 ] | SEG sltr(index|ti|rpl)     base    limit G D
00102043286i[CPU0 ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
00102043286i[CPU0 ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00102043286i[CPU0 ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00102043286i[CPU0 ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00102043286i[CPU0 ] |  FS:0000( 0000| 0|  0) 00000000 00000000 0 0
00102043286i[CPU0 ] |  GS:0018( 0003| 0|  0) c00b8000 00007fff 1 1
00102043286i[CPU0 ] | EIP=c0001fcd (c0001fcd)
00102043286i[CPU0 ] | CR0=0xe0000011 CR2=0x00000000
00102043286i[CPU0 ] | CR3=0x00100000 CR4=0x00000000
00102043286i[CMOS ] Last time is 1677077511 (Wed Feb 22 06:51:51 2023)
00102043286i[XGUI ] Exit
00102043286i[CTRL ] quit_sim called with exit code 0
